!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
FUNC_END	client/prot.h	/^	FUNC_END,$/;"	e	enum:__anon2
FUNC_END	server/prot.h	/^	FUNC_END,$/;"	e	enum:__anon1
FUNC_EXIT	client/prot.h	/^	FUNC_EXIT,$/;"	e	enum:__anon2
FUNC_EXIT	server/prot.h	/^	FUNC_EXIT,$/;"	e	enum:__anon1
FUNC_HEART	client/prot.h	/^	FUNC_HEART,$/;"	e	enum:__anon2
FUNC_HEART	server/prot.h	/^	FUNC_HEART,$/;"	e	enum:__anon1
FUNC_INVALID	client/prot.h	/^	FUNC_INVALID$/;"	e	enum:__anon2
FUNC_INVALID	server/prot.h	/^	FUNC_INVALID$/;"	e	enum:__anon1
FUNC_LOGIN	client/prot.h	/^	FUNC_LOGIN,$/;"	e	enum:__anon2
FUNC_LOGIN	server/prot.h	/^	FUNC_LOGIN,$/;"	e	enum:__anon1
FUNC_REG	client/prot.h	/^	FUNC_REG,$/;"	e	enum:__anon2
FUNC_REG	server/prot.h	/^	FUNC_REG,$/;"	e	enum:__anon1
FUNC_START	client/prot.h	/^	FUNC_START = 0,$/;"	e	enum:__anon2
FUNC_START	server/prot.h	/^	FUNC_START = 0,$/;"	e	enum:__anon1
FUNC_WORD	client/prot.h	/^	FUNC_WORD,$/;"	e	enum:__anon2
FUNC_WORD	server/prot.h	/^	FUNC_WORD,$/;"	e	enum:__anon1
LEN_PACKET_FUNC	client/prot.h	5;"	d
LEN_PACKET_FUNC	server/prot.h	5;"	d
LEN_PACKET_HEAD	client/prot.h	6;"	d
LEN_PACKET_HEAD	server/prot.h	6;"	d
LEN_PACKET_LEN	client/prot.h	4;"	d
LEN_PACKET_LEN	server/prot.h	4;"	d
LEN_PASSWORD	client/prot.h	9;"	d
LEN_PASSWORD	server/prot.h	9;"	d
LEN_RESULT	client/prot.h	10;"	d
LEN_RESULT	server/prot.h	10;"	d
LEN_USER_NAME	client/prot.h	8;"	d
LEN_USER_NAME	server/prot.h	8;"	d
RET_ERR_DATABASE	client/prot.h	15;"	d
RET_ERR_DATABASE	server/prot.h	15;"	d
RET_ERR_USER	client/prot.h	16;"	d
RET_ERR_USER	server/prot.h	16;"	d
RET_ERR_USER_EXIST	client/prot.h	14;"	d
RET_ERR_USER_EXIST	server/prot.h	14;"	d
RET_ERR_WORD	client/prot.h	17;"	d
RET_ERR_WORD	server/prot.h	17;"	d
RET_SUCCESS	client/prot.h	13;"	d
RET_SUCCESS	server/prot.h	13;"	d
__PROT_H__	client/prot.h	2;"	d
__PROT_H__	server/prot.h	2;"	d
__SERVER_H__	server/server.h	2;"	d
__SQLITE_H__	server/sqlite.h	2;"	d
add_quote	loadwords/loadwords.c	/^void add_quote(char *s)$/;"	f
atoi_len	client/prot.c	/^int atoi_len(const char *buf, int len)$/;"	f
atoi_len	server/prot.c	/^int atoi_len(const char *buf, int len)$/;"	f
back_move	loadwords/loadwords.c	/^void back_move(char *s)$/;"	f
display_menu	client/client.c	/^void display_menu(void)$/;"	f
do_client	server/server.c	/^void do_client(int sockfd, sqlite3 *db)$/;"	f
do_exit	client/client.c	/^int do_exit(int sockfd)$/;"	f
do_exit	server/server.c	/^int do_exit(char *packet)$/;"	f
do_heart	client/client.c	/^int do_heart(int sockfd)$/;"	f
do_heart	server/server.c	/^int do_heart(char *packet)$/;"	f
do_login	client/client.c	/^int do_login(int sockfd)$/;"	f
do_login	server/server.c	/^int do_login(char *packet, sqlite3 *db)$/;"	f
do_register	client/client.c	/^int do_register(int sockfd)$/;"	f
do_register	server/server.c	/^int do_register(char *packet, sqlite3 *db)$/;"	f
do_word	client/client.c	/^int do_word(int sockfd)$/;"	f
do_word	server/server.c	/^int do_word(char *packet, sqlite3 *db)$/;"	f
itoa_len	client/prot.c	/^void itoa_len(char *buf, int val, int len)$/;"	f
itoa_len	server/prot.c	/^void itoa_len(char *buf, int val, int len)$/;"	f
load_words	loadwords/loadwords.c	/^void load_words(sqlite3 *db, FILE *fp)$/;"	f
login_input	client/client.c	/^void login_input(char *name, char *password)$/;"	f
main	client/client.c	/^int main(int argc, const char *argv[])$/;"	f
main	loadwords/loadwords.c	/^int main(int argc, const char *argv[])$/;"	f
main	server/server.c	/^int main(int argc, const char *argv[])$/;"	f
packet_disp_err	client/prot.c	/^void packet_disp_err(int err)$/;"	f
packet_disp_err	server/prot.c	/^void packet_disp_err(int err)$/;"	f
packet_pack_exit_req	client/prot.c	/^int packet_pack_exit_req(char *packet)$/;"	f
packet_pack_exit_req	server/prot.c	/^int packet_pack_exit_req(char *packet)$/;"	f
packet_pack_exit_resp	client/prot.c	/^int packet_pack_exit_resp(char *packet, int result)$/;"	f
packet_pack_exit_resp	server/prot.c	/^int packet_pack_exit_resp(char *packet, int result)$/;"	f
packet_pack_head	client/prot.c	/^int packet_pack_head(char *packet, int content_len, int func)$/;"	f
packet_pack_head	server/prot.c	/^int packet_pack_head(char *packet, int content_len, int func)$/;"	f
packet_pack_login_req	client/prot.c	/^int packet_pack_login_req(char *packet, const char *name, const char *password)$/;"	f
packet_pack_login_req	server/prot.c	/^int packet_pack_login_req(char *packet, const char *name, const char *password)$/;"	f
packet_pack_login_resp	client/prot.c	/^int packet_pack_login_resp(char *packet, int result)$/;"	f
packet_pack_login_resp	server/prot.c	/^int packet_pack_login_resp(char *packet, int result)$/;"	f
packet_pack_reg_req	client/prot.c	/^int packet_pack_reg_req(char *packet, const char *name, const char *password)$/;"	f
packet_pack_reg_req	server/prot.c	/^int packet_pack_reg_req(char *packet, const char *name, const char *password)$/;"	f
packet_pack_reg_resp	client/prot.c	/^int packet_pack_reg_resp(char *packet, int result)$/;"	f
packet_pack_reg_resp	server/prot.c	/^int packet_pack_reg_resp(char *packet, int result)$/;"	f
packet_pack_word_req	client/prot.c	/^int packet_pack_word_req(char *packet, const char *word)$/;"	f
packet_pack_word_req	server/prot.c	/^int packet_pack_word_req(char *packet, const char *word)$/;"	f
packet_pack_word_resp	client/prot.c	/^int packet_pack_word_resp(char *packet, int result, const char *explain)$/;"	f
packet_pack_word_resp	server/prot.c	/^int packet_pack_word_resp(char *packet, int result, const char *explain)$/;"	f
packet_unpack_exit_req	client/prot.c	/^void packet_unpack_exit_req(const char *packet)$/;"	f
packet_unpack_exit_req	server/prot.c	/^void packet_unpack_exit_req(const char *packet)$/;"	f
packet_unpack_exit_resp	client/prot.c	/^int packet_unpack_exit_resp(const char *packet)$/;"	f
packet_unpack_exit_resp	server/prot.c	/^int packet_unpack_exit_resp(const char *packet)$/;"	f
packet_unpack_head	client/prot.c	/^int packet_unpack_head(const char *packet, int *func)$/;"	f
packet_unpack_head	server/prot.c	/^int packet_unpack_head(const char *packet, int *func)$/;"	f
packet_unpack_login_req	client/prot.c	/^void packet_unpack_login_req(const char *packet, char *name, char *password)$/;"	f
packet_unpack_login_req	server/prot.c	/^void packet_unpack_login_req(const char *packet, char *name, char *password)$/;"	f
packet_unpack_login_resp	client/prot.c	/^int packet_unpack_login_resp(const char *packet)$/;"	f
packet_unpack_login_resp	server/prot.c	/^int packet_unpack_login_resp(const char *packet)$/;"	f
packet_unpack_reg_req	client/prot.c	/^void packet_unpack_reg_req(const char *packet, char *name, char *password)$/;"	f
packet_unpack_reg_req	server/prot.c	/^void packet_unpack_reg_req(const char *packet, char *name, char *password)$/;"	f
packet_unpack_reg_resp	client/prot.c	/^int packet_unpack_reg_resp(const char *packet)$/;"	f
packet_unpack_reg_resp	server/prot.c	/^int packet_unpack_reg_resp(const char *packet)$/;"	f
packet_unpack_word_req	client/prot.c	/^void packet_unpack_word_req(const char *packet, char *word)$/;"	f
packet_unpack_word_req	server/prot.c	/^void packet_unpack_word_req(const char *packet, char *word)$/;"	f
packet_unpack_word_resp	client/prot.c	/^int packet_unpack_word_resp(const char *packet, char *explain)$/;"	f
packet_unpack_word_resp	server/prot.c	/^int packet_unpack_word_resp(const char *packet, char *explain)$/;"	f
recv_fix_len	client/client.c	/^int recv_fix_len(int sockfd, char *buf, int len)$/;"	f
recv_fix_len	server/server.c	/^int recv_fix_len(int sockfd, char *buf, int len)$/;"	f
recv_packet	client/client.c	/^int recv_packet(int sockfd, char *packet)$/;"	f
recv_proc	server/server.c	/^int recv_proc(int sockfd, sqlite3 *db)$/;"	f
register_input	client/client.c	/^void register_input(char *name, char *password)$/;"	f
send_fix_len	client/client.c	/^int send_fix_len(int sockfd, char *buf, int len)$/;"	f
send_fix_len	server/server.c	/^int send_fix_len(int sockfd, char *buf, int len)$/;"	f
sig_timer	client/client.c	/^void sig_timer(int signo)$/;"	f
sockfd	client/client.c	/^int sockfd;$/;"	v
sqlite_disp_debug	server/sqlite.c	/^void sqlite_disp_debug(char **resultp, int row, int column)$/;"	f
sqlite_find_user	server/sqlite.c	/^int sqlite_find_user(sqlite3 *db, const char *name, char *passwd)$/;"	f
sqlite_find_word	server/sqlite.c	/^int sqlite_find_word(sqlite3 *db, const char * word, char *explain)$/;"	f
sqlite_insert_user	server/sqlite.c	/^int sqlite_insert_user(sqlite3 *db, const char *name, const char *passwd)$/;"	f
word_input	client/client.c	/^void word_input(char *word, int maxlen)$/;"	f
